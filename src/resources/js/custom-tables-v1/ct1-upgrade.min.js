let upgradeBoxElement=null,localizedData=null,ajaxUrl=null,pollInterval=5e3,pollTimeoutId=null,currentViewState={poll:!0};export const selectors={upgradeBox:"#tec-ct1-upgrade-dynamic",startPreviewButton:".tec-ct1-upgrade-start-migration-preview",startMigrationButton:".tec-ct1-upgrade-start-migration",cancelMigrationButton:".tec-ct1-upgrade-cancel-migration"};export const buildQueryString=(t={})=>{if(!(t instanceof Object&&!Array.isArray(t)||"string"==typeof t))throw new Error("data must be an object or a string");if("string"==typeof t){const e={};t.split("&").map(t=>{const[r,o]=t.split("=",2);e[r]=o}),t=e}const e=Object.keys(t).map(function(e){return encodeURIComponent(e)+"="+encodeURIComponent(t[e])}).join("&");return e?"?"+e:""};export const ajaxGet=(t,e={},r,o,n)=>{if(!t)return;const a=t+buildQueryString(e),i=new XMLHttpRequest;i.open("GET",a,!0),i.onreadystatechange=function(){if(i.readyState===XMLHttpRequest.DONE){const t=i.status;if(0===t||t>=200&&t<400)try{r&&r(JSON.parse(this.response))}catch(t){n&&n(this.response)}else o&&o(this.response)}},i.onerror=function(){n&&n()},i.send()};export const getUpgradeBoxElement=()=>document.getElementById(selectors.upgradeBox.substr(1));export const onSuccess=()=>{};export const onFailure=()=>{};export const onError=()=>{};export const recursePollForReport=()=>{syncReportData(pollForReport)};export const shouldPoll=()=>currentViewState.poll||tecCt1Upgrade.forcePolling;export const pollForReport=()=>{shouldPoll()&&(pollTimeoutId=setTimeout(recursePollForReport,pollInterval))};export const handleReportData=function(t){const{nodes:e,key:r,html:o}=t;currentViewState.key&&currentViewState.key===r||(getUpgradeBoxElement().innerHTML=o,bindNodes(r)),e.forEach(t=>{if(isNodeDiff(t.key,t.hash)){let e=document.querySelector(t.target);e&&(e.innerHTML=t.html,bindNodes(t.key))}}),currentViewState=t};export const bindNodes=t=>{let e;(e=document.querySelector(selectors.startPreviewButton))&&e.addEventListener("click",handleStartMigrationWithPreview),(e=document.querySelector(selectors.startMigrationButton))&&e.addEventListener("click",handleStartMigration),(e=document.querySelector(selectors.cancelMigrationButton))&&e.addEventListener("click",handleCancelMigration)};export const handleCancelMigration=t=>{t.preventDefault(),t.target.setAttribute("disabled","disabled"),t.target.removeEventListener("click",handleCancelMigration),cancelReportPoll(),ajaxGet(tecCt1Upgrade.ajaxUrl,{action:tecCt1Upgrade.actions.cancelMigration,_ajax_nonce:tecCt1Upgrade.nonce},t=>{handleReportData(t),pollForReport()})};export const handleStartMigrationWithPreview=t=>{t.preventDefault(),t.target.setAttribute("disabled","disabled"),t.target.removeEventListener("click",handleStartMigrationWithPreview),startMigration(!0)};export const handleStartMigration=t=>{t.preventDefault(),t.target.setAttribute("disabled","disabled"),t.target.removeEventListener("click",handleStartMigration),startMigration(!1)};export const startMigration=t=>{cancelReportPoll(),ajaxGet(tecCt1Upgrade.ajaxUrl,{action:tecCt1Upgrade.actions.startMigration,tec_events_custom_tables_v1_migration_dry_run:t?1:0,_ajax_nonce:tecCt1Upgrade.nonce},t=>{handleReportData(t),pollForReport()})};export const cancelReportPoll=()=>{clearTimeout(pollTimeoutId)};export const isNodeDiff=(t,e)=>{const{nodes:r}=currentViewState;if(!r)return!0;const o=r.find(({key:e})=>e===t);return!o||o.hash!==e};export const syncReportData=function(t=null){getReport(function(e){handleReportData(e),t&&t(e)})};export const getReport=t=>{ajaxGet(tecCt1Upgrade.ajaxUrl,{action:tecCt1Upgrade.actions.getReport,_ajax_nonce:tecCt1Upgrade.nonce},t)};export const init=()=>{(localizedData=window.tecCt1Upgrade)&&(upgradeBoxElement=getUpgradeBoxElement(),ajaxUrl=localizedData.ajaxUrl,0!==(pollInterval=localizedData.pollInterval||pollInterval)&&syncReportData(pollForReport))};"loading"!==document.readyState?init():document.addEventListener("DOMContentLoaded",init);