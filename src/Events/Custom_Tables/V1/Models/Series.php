<?php
/**
 * The Series validation and format schema.
 *
 * @since   TBD
 *
 * @package TEC\Events\Custom_Tables\V1\Models
 */

namespace TEC\Events\Custom_Tables\V1\Models;

use TEC\Events_Pro\Custom_Tables\V1\Edits\Event\Trash\Autogenerated_Series;
use TEC\Events_Pro\Custom_Tables\V1\Series\Post_Type as Series_Post_Type;
use WP_Error;
use WP_Post;

/**
 * Class Series
 *
 * @since   TBD
 *
 * @package TEC\Events\Custom_Tables\V1\Models
 */
class Series implements Post_Model {
	/**
	 * The default post status Series posts created by the class will have.
	 *
	 * @since TBD
	 *
	 * @var string
	 */
	private static $default_status = 'publish';

	/**
	 * The Series post type name.
	 *
	 * @since TBD
	 *
	 * @var string
	 */
	private static $post_type_name = 'tribe_event_series';

	/**
	 * {@inheritDoc}
	 */
	public static function vinsert( $posts, array $create_overrides = [] ) {
		$return = [];

		foreach ( (array) $posts as $candidate ) {
			// Series could have numeric names.
			$maybe_series_post = get_post( $candidate );

			if ( $maybe_series_post instanceof WP_Post ) {
				if ( self::$post_type_name !== $maybe_series_post->post_type ) {
					$return[] = 0;
					continue;
				}

				wp_update_post([
					'ID' => $maybe_series_post->ID,
					'post_status' => $create_overrides['post_status']
				]);

				$return[] = $maybe_series_post->ID;
			} else {
				// Never allow the post type to be different from the Series one.
				unset( $create_overrides['post_type'] );
				// New Series, create it now.
				$series_id = wp_insert_post( wp_parse_args( $create_overrides, [
					'post_type'   => Series_Post_Type::POSTTYPE,
					'post_title'  => (string) $candidate,
					'post_status' => self::$default_status,
				] ) );

				if ( $series_id instanceof WP_Error ) {
					$return[] = 0;
				}

				update_post_meta( $series_id, Autogenerated_Series::FLAG_META_KEY, 1 );

				$return[] = (int) $series_id;
			}

		}

		return is_array( $posts ) ? $return : array_pop( $return );
	}
}
